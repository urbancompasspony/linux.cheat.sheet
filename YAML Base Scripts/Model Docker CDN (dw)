#!/bin/bash

# =============================================================================
# ########################################################################### #
# =============================================================================

# Set container name and hostname here.
export NOMECONTAINER="ssh-dw"
export docker_repo="urbancompasspony/ssh-dw:latest"

# USE IT ONLY IF NEEDED:
function docker_extras {
# nothing...

# =============================================================================
# ########################################################################### #
# =============================================================================

echo "0" > /dev/null
}

export configfile="/srv/containers/$NOMECONTAINER/settings.yaml"
export masterfile="/srv/settings.yaml"

function check_root {
  [ "$EUID" -ne 0 ] && {
    echo "Execute esse script como Root! Saindo..."
    exit 1
  }
}

function menu_principal {
  load_config

  # Exemplo com 2 campos (adicione mais conforme necessidade)
  form=$(dialog --ok-label "Criar" --title "Novo Container" --form "$NOMECONTAINER" 9 40 0 \
    "Container:" 1 1 "$var1" 1 11 30 0 \
    3>&1 1>&2 2>&3 3>&- > /dev/tty)

  [ $? -ne 0 ] && exit

  var1=$(echo "$form" | sed -n 1p)

  create
}

function load_config {
  [ -f "$configfile" ] || return
  var1=$(yq -r '.container_name' "$configfile")
  NOMECONTAINER="$var1"
  # Adicione mais campos conforme necessário
}

function check_IP {
  myip0=$(yq -r '.Informacoes.IP_LAN_Install' "$masterfile")

  if [ "null" = "$myip0" ]; then
    dialog --title "ERRO" --msgbox "Conflito de IP detectado! \nMude para outro IP." 6 40
    return
  else
    create
  fi
}

function mkdir0 {
  if [ -d "/srv/containers/$NOMECONTAINER" ]; then
    dialog --title "WARNING" --msgbox "Foram identificados dados previamente configurados! \n\nParando e removendo container caso esteja rodando." 9 40
    if [ $(docker stop "$NOMECONTAINER") ]; then
      docker rm "$NOMECONTAINER"
    else
      clear; echo "O container $NOMECONTAINER não existe ou não foi identificado. Continuando..."
    fi
  else
    mkdir -p "/srv/containers/$NOMECONTAINER"
  fi
}

function save_config {
  sudo touch "$configfile"
  yq -i '.container_name = "'$var1'"' "$configfile"
}

function docker_create {
  docker run -d --privileged --no-healthcheck --restart unless-stopped \
  --name="$NOMECONTAINER" --hostname="$NOMECONTAINER" \
  --network host --add-host=host.docker.internal:host-gateway \
  -v /etc/localtime:/etc/localtime:ro \
  -v /srv/containers/"$NOMECONTAINER"/data:/usr/share \
  "$docker_repo"
}

function create {
  #check_IP
  mkdir0
  save_config
  docker pull "$docker_repo"
  docker_create
  docker_extras
  docker image prune -af
}

check_root
menu_principal

exit 0
