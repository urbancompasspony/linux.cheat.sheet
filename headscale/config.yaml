---
# headscale will look for a configuration file named `config.yaml` (or `config.json`) in the following order:
#
# - `/etc/headscale`
# - `~/.headscale`
# - current working directory

# The url clients will connect to.
# Typically this will be a domain like:
# https://myheadscale.example.com:443
server_url: http://MYVAR1:8080

listen_addr: 0.0.0.0:8080

metrics_listen_addr: 0.0.0.0:9090

grpc_listen_addr: 0.0.0.0:50443
grpc_allow_insecure: true

prefixes:
  v6: fd7a:115c:a1e0::/48
  v4: 100.64.0.0/10

  allocation: sequential

disable_check_updates: true
ephemeral_node_inactivity_timeout: 30m

database:
  type: sqlite

  sqlite:
    path: /var/lib/headscale/db.sqlite

## Let's encrypt / ACME
acme_url: https://acme-v02.api.letsencrypt.org/directory
acme_email: "lalaland@lalaland.com"
tls_letsencrypt_hostname: "MYVAR1"

tls_letsencrypt_cache_dir: /var/lib/headscale/cache
tls_letsencrypt_challenge_type: HTTP-01
tls_letsencrypt_listen: ":http"
## Use already defined certificates:
#tls_cert_path: ""
#tls_key_path: ""

log:
  format: text
  level: info

# Path to a file containing ACL policies.
# ACLs can be defined as YAML or HUJSON.
# https://tailscale.com/kb/1018/acls/
#acl_policy_path: ""

## DNS
# headscale supports Tailscale's DNS configuration and MagicDNS.
# Please have a look to their KB to better understand the concepts:
# - https://tailscale.com/kb/1054/dns/
# - https://tailscale.com/kb/1081/magicdns/
# - https://tailscale.com/blog/2021-09-private-dns-with-magicdns/
dns_config:
  # Whether to prefer using Headscale provided DNS or use local.
  override_local_dns: true

  nameservers:
    - 1.0.0.1
    - 8.8.4.4

  # Search domains to inject.
  #domains: []

  magic_dns: true

  # Defines the base domain to create the hostnames for MagicDNS.
  # `base_domain` must be a FQDNs, without the trailing dot.
  # The FQDN of the hosts will be
  # `hostname.user.base_domain` (e.g., _myhost.myuser.example.com_).
  base_domain: MYVAR2

unix_socket: /var/run/headscale/headscale.sock
unix_socket_permission: "0770"

logtail:
  enabled: false

# Enabling this option makes devices prefer a random port for WireGuard traffic over the
# default static port 41641. This option is intended as a workaround for some buggy
# firewall devices. See https://tailscale.com/kb/1181/firewalls/ for more information.
randomize_client_port: true
